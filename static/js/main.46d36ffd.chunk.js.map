{"version":3,"sources":["components/Navbar.js","components/RCard.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","react_default","a","createElement","className","href","role","onSubmit","events","preventDefault","console","log","onsearch","type","placeholder","aria-label","onChange","target","value","ExpandMore","styled","expand","other","objectWithoutProperties","react","IconButton","_ref","theme","transform","marginLeft","transition","transitions","create","duration","shortest","RCard","imgsrc","searchh","_React$useState","React","_React$useState2","expanded","setExpanded","_React$useState3","_React$useState4","expanded2","setExpanded2","dataset","setDataset","getData","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","options","res","data","list","wrap","_context","prev","next","method","headers","X-RapidAPI-Key","X-RapidAPI-Host","fetch","sent","json","response","stop","apply","this","arguments","useEffect","handleExpandClick","handleExpandClick2","Card","sx","maxWidth","map","item","CardHeader","avatar","Avatar","bgcolor","red","action","title","country","subheader","day","CardMedia","alt","id","src","CardContent","CardActions","disableSpacing","Date","RCard_ExpandMore","onClick","aria-expanded","Typography","variant","ExpandMore_default","Collapse","in","timeout","unmountOnExit","paragraph","cases","total","toLocaleString","active","critical","recovered","deaths","tests","Main","components_Navbar","App","components_Main","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.46d36ffd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const [search , setSearch] = useState('')\r\n    const changeHandler = (events) => {\r\n        // props.onsearch(events.target.value)\r\n        setSearch(events.target.value)\r\n        console.log(events.target.value)\r\n    }\r\n\r\n    const submitHandler = (events) => {\r\n      events.preventDefault();\r\n      console.log(search)\r\n      props.onsearch(search);\r\n    }\r\n\r\n  return (\r\n    <div><nav className=\"navbar bg-light\">\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href='/'>Covid Live Database</a>\r\n      <form className=\"d-flex\" role=\"search\" onSubmit={submitHandler}>\r\n        <input className=\"form-control me-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={changeHandler}/>\r\n        <input className=\"btn btn-outline-success\" type=\"submit\"></input>\r\n      </form>\r\n   </div>\r\n  </nav></div>\r\n  )\r\n}\r\n\r\nexport default Navbar","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { red } from \"@mui/material/colors\";\r\n// import FavoriteIcon from \"@mui/icons-material/Favorite\";\r\n// import ShareIcon from \"@mui/icons-material/Share\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(0deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default function RCard(props) {\r\n  const imgsrc = \"https://countryflagsapi.com/png/\" + props.searchh;\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [expanded2, setExpanded2] = React.useState(false);\r\n  // const [county,setCounty] = useState(props.searchh)\r\n  const [dataset, setDataset] = useState([]);\r\n\r\n  const getData = async () => {\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"e4e5ed95c2msh1fbb7a489c8c97fp14204djsn763c3122b4d4\",\r\n        \"X-RapidAPI-Host\": \"covid-193.p.rapidapi.com\",\r\n      },\r\n    };\r\n    const res = await fetch(\r\n      \"https://covid-193.p.rapidapi.com/statistics?country=\" + props.searchh,\r\n      options\r\n    );\r\n    const data = await res.json();\r\n    const list = data.response;\r\n    setDataset(list);\r\n    // console.log(list[0].country);\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [props.searchh]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const handleExpandClick2 = () => {\r\n    setExpanded2(!expanded2);\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345 }}>\r\n      {dataset.map((item) => {\r\n        return (\r\n          <>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                  I\r\n                </Avatar>\r\n              }\r\n              action={\r\n                <IconButton aria-label=\"settings\">\r\n                  {/* <MoreVertIcon /> */}\r\n                  <div>\r\n                    <span className=\"indicator online\"></span>\r\n                    <span className=\"LIVE\">LIVE</span>\r\n                  </div>\r\n                </IconButton>\r\n              }\r\n              title={item.country}\r\n              subheader={item.day}\r\n            ></CardHeader>\r\n            <CardMedia>\r\n              <img alt=\"sorrt\" id=\"myImageID\" src={imgsrc}></img>\r\n            </CardMedia>\r\n            <CardContent></CardContent>\r\n            <CardActions disableSpacing>\r\n              <span>{Date(item.day)}</span>\r\n              <IconButton aria-label=\"share\">{/* <ShareIcon /> */}</IconButton>\r\n              <ExpandMore\r\n                expand={expanded}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n              >\r\n                <Typography variant=\"subtitle1\">Click here</Typography>\r\n                <ExpandMoreIcon />\r\n              </ExpandMore>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              <CardContent>\r\n                <Typography paragraph>\r\n                  Cases : {item.cases.total.toLocaleString()}{\" \"}\r\n                  <ExpandMore\r\n                    expand={expanded2}\r\n                    onClick={handleExpandClick2}\r\n                    aria-expanded={expanded2}\r\n                    aria-label=\"show more\"\r\n                  >\r\n                    <Typography variant=\"subtitle1\"></Typography>\r\n                    <ExpandMoreIcon />\r\n                  </ExpandMore>\r\n                  <Collapse in={expanded2} timeout=\"auto\" unmountOnExit>\r\n                    <Typography variant=\"subtitle1\">\r\n                      Active : {item.cases.active.toLocaleString()}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\">\r\n                      Critical : {item.cases.critical.toLocaleString()}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\">\r\n                      Recovered : {item.cases.recovered.toLocaleString()}\r\n                    </Typography>\r\n                  </Collapse>\r\n                </Typography>\r\n                <Typography paragraph>\r\n                  Deaths : {item.deaths.total.toLocaleString()}\r\n                </Typography>\r\n                <Typography paragraph>\r\n                  Total Tests Done : {item.tests.total.toLocaleString()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Collapse>\r\n          </>\r\n        );\r\n      })}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport Navbar from './Navbar'\r\nimport RCard from './RCard'\r\nimport \"./main.css\"\r\n\r\nconst Main = (props) => {\r\n  const [search,setSearch] = useState('india')\r\n  // const changeHandler = (events) => {\r\n  //   setSearch(events.target.value);\r\n  //   console.log(events.target.value);\r\n  // }\r\n  // const submitHandler = (event) => {\r\n  //   event.preventDefault();\r\n  //   console.log(search);\r\n  //   props.searchsend(search);\r\n  //   // setSearch(events.target.value)\r\n  //   // setSearch(events.target.value)\r\n  // }\r\n\r\n  const searchhand = (data) => {\r\n    console.log(data)\r\n    setSearch(data)\r\n  }\r\n  return (\r\n    <div>\r\n        <Navbar onsearch={searchhand}></Navbar>\r\n        <center>\r\n        <RCard searchh={search} />\r\n        </center>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main","import Main from \"./components/Main\"\nimport React from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  return (<div className=\"App\">\n    <Main />\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}